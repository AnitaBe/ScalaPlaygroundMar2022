[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\anita\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\anita\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 11.0.14.1)
[debug]       Load.loadUnit: plugins took 290.2835ms
[debug]       Load.loadUnit: defsScala took 0.5489ms
[debug] [Loading] Scanning directory C:\Users\anita\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\anita\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.8593 ms
[debug]           Load.resolveProject(global-plugins) took 179.6988ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\anita\.sbt\1.0\plugins, plugins: List(<none>))) took 282.3849ms
[debug] [Loading] Done in C:\Users\anita\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 335.3897ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6875ms
[debug]     Load.loadUnit(file:/C:/Users/anita/.sbt/1.0/plugins/, ...) took 649.6461ms
[debug]   Load.apply: load took 1220.3724ms
[debug]   Load.apply: resolveProjects took 16.2978ms
[debug]   Load.apply: finalTransforms took 177.8486ms
[debug]   Load.apply: config.delegates took 15.299ms
[debug]   Load.apply: Def.make(settings)... took 1151.0378ms
[debug]   Load.apply: structureIndex took 251.343ms
[debug]   Load.apply: mkStreams took 3.14ms
[info] loading global plugins from C:\Users\anita\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 26722.1945ms
[debug]           Load.loadUnit: plugins took 100.3539ms
[debug]           Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022\project
[debug]             Load.loadUnit: mkEval took 23.1664ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.3313 ms
[info] loading settings for project scalaplaygroundmar2022-build from idea.sbt ...
[debug]               Load.resolveProject(scalaplaygroundmar2022-build) took 90.6725ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaplaygroundmar2022-build, base: C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022\project, plugins: List(<none>))) took 191.0961ms
[debug] [Loading] Done in C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022\project, returning: (scalaplaygroundmar2022-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 12712.2793ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.1387ms
[debug]         Load.loadUnit(file:/C:/Users/anita/IdeaProjects/ScalaPlaygroundMar2022/project/, ...) took 12828.2926ms
[debug]       Load.apply: load took 12832.2512ms
[debug]       Load.apply: resolveProjects took 0.2544ms
[debug]       Load.apply: finalTransforms took 36.5884ms
[debug]       Load.apply: config.delegates took 1.813ms
[debug]       Load.apply: Def.make(settings)... took 464.08ms
[debug]       Load.apply: structureIndex took 118.8278ms
[debug]       Load.apply: mkStreams took 0.0048ms
[info] loading project definition from C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 19837.1881ms
[debug]     Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022
[debug]       Load.loadUnit: mkEval took 0.6785ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.4889 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 76.8199ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022, plugins: List(<none>))) took 85.3258ms
[debug] [Loading] Done in C:\Users\anita\IdeaProjects\ScalaPlaygroundMar2022, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3786.5087ms
[debug]     Load.loadUnit: cleanEvalClasses took 26.6346ms
[debug]   Load.loadUnit(file:/C:/Users/anita/IdeaProjects/ScalaPlaygroundMar2022/, ...) took 23652.6902ms
[debug] Load.apply: load took 23657.8145ms
[debug] Load.apply: resolveProjects took 0.1994ms
[debug] Load.apply: finalTransforms took 72.6771ms
[debug] Load.apply: config.delegates took 1.0417ms
[debug] Load.apply: Def.make(settings)... took 383.9695ms
[debug] Load.apply: structureIndex took 74.4913ms
[debug] Load.apply: mkStreams took 0.0042ms
[info] set current project to ScalaPlaygroundMar2022 (in build file:/C:/Users/anita/IdeaProjects/ScalaPlaygroundMar2022/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54163 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54163, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaPlaygroundMar2022 (in build file:/C:/Users/anita/IdeaProjects/ScalaPlaygroundMar2022/)
[debug] > Exec(idea-shell, None, None)
